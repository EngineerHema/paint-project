{"ast":null,"code":"var _jsxFileName = \"D:\\\\paint-project\\\\paint-front-end\\\\src\\\\portrait.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { Stage, Layer, Rect } from \"react-konva\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Portrait({\n  bgColour,\n  setBgColour\n}) {\n  _s();\n  const stageRef = useRef();\n  const [shapes, setShapes] = useState([]);\n  const [currentShape, setCurrentShape] = useState(null);\n  const onPointerDown = () => {\n    const stage = stageRef.current;\n    const {\n      x,\n      y\n    } = stage.getPointerPosition();\n    setCurrentShape({\n      x,\n      y,\n      width: 0,\n      height: 0\n    });\n  };\n  const onPointerMove = () => {\n    if (!currentShape) return;\n    const stage = stageRef.current;\n    const {\n      x,\n      y\n    } = stage.getPointerPosition();\n    const {\n      x: startX,\n      y: startY\n    } = currentShape;\n\n    // Update rectangle dimensions\n    const newShape = {\n      x: startX,\n      y: startY,\n      width: x - startX,\n      height: y - startY,\n      bgColour\n    };\n    setCurrentShape(newShape);\n  };\n  const onPointerUp = () => {\n    if (currentShape) {\n      setShapes([...shapes, currentShape]); // Finalize the rectangle\n      setCurrentShape(null); // Reset current rectangle\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    ref: stageRef,\n    width: window.innerWidth,\n    height: window.innerHeight,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [shapes.map((shape, i) => /*#__PURE__*/_jsxDEV(Rect, {\n        x: shape.x,\n        y: shape.y,\n        width: shape.width,\n        height: shape.height,\n        fill: bgColour,\n        stroke: \"blue\",\n        strokeWidth: 2\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)), currentShape && /*#__PURE__*/_jsxDEV(Rect, {\n        x: currentShape.x,\n        y: currentShape.y,\n        width: currentShape.width,\n        height: currentShape.height,\n        fill: bgColour,\n        stroke: \"blue\",\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Portrait, \"wZj3UUnCwXSZxamf2ZLpOb6+BAY=\");\n_c = Portrait;\nvar _c;\n$RefreshReg$(_c, \"Portrait\");","map":{"version":3,"names":["React","useRef","useState","Stage","Layer","Rect","jsxDEV","_jsxDEV","Portrait","bgColour","setBgColour","_s","stageRef","shapes","setShapes","currentShape","setCurrentShape","onPointerDown","stage","current","x","y","getPointerPosition","width","height","onPointerMove","startX","startY","newShape","onPointerUp","ref","window","innerWidth","innerHeight","children","map","shape","i","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/paint-project/paint-front-end/src/portrait.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\n\r\nexport default function Portrait({bgColour, setBgColour}) {\r\n\r\n  const stageRef = useRef();\r\n  const [shapes, setShapes] = useState([]);\r\n  const [currentShape, setCurrentShape] = useState(null);\r\n\r\n  const onPointerDown = () => {\r\n    const stage = stageRef.current;\r\n    const { x, y } = stage.getPointerPosition();\r\n    setCurrentShape({ x, y, width: 0, height: 0 });\r\n  };\r\n\r\n  const onPointerMove = () => {\r\n    if (!currentShape) return;\r\n\r\n    const stage = stageRef.current;\r\n    const { x, y } = stage.getPointerPosition();\r\n    const { x: startX, y: startY } = currentShape;\r\n\r\n    // Update rectangle dimensions\r\n    const newShape = {\r\n      x: startX,\r\n      y: startY,\r\n      width: x - startX,\r\n      height: y - startY,\r\n      bgColour\r\n    };\r\n\r\n    setCurrentShape(newShape);\r\n  };\r\n\r\n  const onPointerUp = () => {\r\n    if (currentShape) {\r\n      setShapes([...shapes, currentShape]); // Finalize the rectangle\r\n      setCurrentShape(null); // Reset current rectangle\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stage\r\n      ref={stageRef}\r\n      width={window.innerWidth}\r\n      height={window.innerHeight}\r\n      onPointerDown={onPointerDown}\r\n      onPointerMove={onPointerMove}\r\n      onPointerUp={onPointerUp}\r\n    >\r\n      <Layer>\r\n        {/* Render finalized shapes */}\r\n        {shapes.map((shape, i) => (\r\n          <Rect\r\n            key={i}\r\n            x={shape.x}\r\n            y={shape.y}\r\n            width={shape.width}\r\n            height={shape.height}\r\n            fill={bgColour}\r\n            stroke=\"blue\"\r\n            strokeWidth={2}\r\n          />\r\n        ))}\r\n\r\n        {/* Render the shapeangle being drawn */}\r\n        {currentShape && (\r\n          <Rect\r\n            x={currentShape.x}\r\n            y={currentShape.y}\r\n            width={currentShape.width}\r\n            height={currentShape.height}\r\n            fill={bgColour}\r\n            stroke=\"blue\"\r\n            strokeWidth={2}\r\n          />\r\n        )}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,QAAQA,CAAC;EAACC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAExD,MAAMC,QAAQ,GAAGX,MAAM,CAAC,CAAC;EACzB,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMe,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAGN,QAAQ,CAACO,OAAO;IAC9B,MAAM;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAGH,KAAK,CAACI,kBAAkB,CAAC,CAAC;IAC3CN,eAAe,CAAC;MAAEI,CAAC;MAAEC,CAAC;MAAEE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACV,YAAY,EAAE;IAEnB,MAAMG,KAAK,GAAGN,QAAQ,CAACO,OAAO;IAC9B,MAAM;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAGH,KAAK,CAACI,kBAAkB,CAAC,CAAC;IAC3C,MAAM;MAAEF,CAAC,EAAEM,MAAM;MAAEL,CAAC,EAAEM;IAAO,CAAC,GAAGZ,YAAY;;IAE7C;IACA,MAAMa,QAAQ,GAAG;MACfR,CAAC,EAAEM,MAAM;MACTL,CAAC,EAAEM,MAAM;MACTJ,KAAK,EAAEH,CAAC,GAAGM,MAAM;MACjBF,MAAM,EAAEH,CAAC,GAAGM,MAAM;MAClBlB;IACF,CAAC;IAEDO,eAAe,CAACY,QAAQ,CAAC;EAC3B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAId,YAAY,EAAE;MAChBD,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEE,YAAY,CAAC,CAAC,CAAC,CAAC;MACtCC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACET,OAAA,CAACJ,KAAK;IACJ2B,GAAG,EAAElB,QAAS;IACdW,KAAK,EAAEQ,MAAM,CAACC,UAAW;IACzBR,MAAM,EAAEO,MAAM,CAACE,WAAY;IAC3BhB,aAAa,EAAEA,aAAc;IAC7BQ,aAAa,EAAEA,aAAc;IAC7BI,WAAW,EAAEA,WAAY;IAAAK,QAAA,eAEzB3B,OAAA,CAACH,KAAK;MAAA8B,QAAA,GAEHrB,MAAM,CAACsB,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACnB9B,OAAA,CAACF,IAAI;QAEHe,CAAC,EAAEgB,KAAK,CAAChB,CAAE;QACXC,CAAC,EAAEe,KAAK,CAACf,CAAE;QACXE,KAAK,EAAEa,KAAK,CAACb,KAAM;QACnBC,MAAM,EAAEY,KAAK,CAACZ,MAAO;QACrBc,IAAI,EAAE7B,QAAS;QACf8B,MAAM,EAAC,MAAM;QACbC,WAAW,EAAE;MAAE,GAPVH,CAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQP,CACF,CAAC,EAGD7B,YAAY,iBACXR,OAAA,CAACF,IAAI;QACHe,CAAC,EAAEL,YAAY,CAACK,CAAE;QAClBC,CAAC,EAAEN,YAAY,CAACM,CAAE;QAClBE,KAAK,EAAER,YAAY,CAACQ,KAAM;QAC1BC,MAAM,EAAET,YAAY,CAACS,MAAO;QAC5Bc,IAAI,EAAE7B,QAAS;QACf8B,MAAM,EAAC,MAAM;QACbC,WAAW,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACjC,EAAA,CA7EuBH,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}