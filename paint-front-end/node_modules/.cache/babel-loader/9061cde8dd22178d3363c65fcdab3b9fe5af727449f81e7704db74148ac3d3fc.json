{"ast":null,"code":"var _jsxFileName = \"D:\\\\paint-project\\\\paint-front-end\\\\src\\\\button.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button({\n  colour,\n  index,\n  bgColour,\n  setBgColour\n}) {\n  _s();\n  const [isHovered, setIsHovered] = useState(false); // Only to add shadow effect on buttons\n\n  const onMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const onMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const changeColour = () => {\n    setBgColour(colour); // Update background color when clicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"colour\",\n    id: colour,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: changeColour,\n    style: {\n      backgroundColor: colour,\n      boxShadow: isHovered ? `5px 5px 5px ${colour}` : 'none',\n      // Apply shadow on hover\n      border: 'none',\n      // Optional: remove default border\n      cursor: 'pointer' // Optional: indicate button is clickable\n    }\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Button, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","colour","index","bgColour","setBgColour","_s","isHovered","setIsHovered","onMouseEnter","onMouseLeave","changeColour","className","id","onClick","style","backgroundColor","boxShadow","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/paint-project/paint-front-end/src/button.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Button({ colour, index, bgColour, setBgColour }) {\r\n    const [isHovered, setIsHovered] = useState(false); // Only to add shadow effect on buttons\r\n    \r\n    const onMouseEnter = () => {\r\n        setIsHovered(true);\r\n    };\r\n\r\n    const onMouseLeave = () => {\r\n        setIsHovered(false);\r\n    };\r\n\r\n    const changeColour = () => {\r\n        setBgColour(colour); // Update background color when clicked\r\n    };\r\n\r\n    return (\r\n        <button\r\n            key={index}\r\n            className=\"colour\"\r\n            id={colour}\r\n            onMouseEnter={onMouseEnter}\r\n            onMouseLeave={onMouseLeave}\r\n            onClick={changeColour}\r\n            style={{\r\n                backgroundColor: colour,\r\n                boxShadow: isHovered ? `5px 5px 5px ${colour}` : 'none', // Apply shadow on hover\r\n                border: 'none', // Optional: remove default border\r\n                cursor: 'pointer', // Optional: indicate button is clickable\r\n            }}\r\n        >\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,MAAMA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACvBD,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvBF,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvBN,WAAW,CAACH,MAAM,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACIF,OAAA;IAEIY,SAAS,EAAC,QAAQ;IAClBC,EAAE,EAAEX,MAAO;IACXO,YAAY,EAAEA,YAAa;IAC3BC,YAAY,EAAEA,YAAa;IAC3BI,OAAO,EAAEH,YAAa;IACtBI,KAAK,EAAE;MACHC,eAAe,EAAEd,MAAM;MACvBe,SAAS,EAAEV,SAAS,GAAG,eAAeL,MAAM,EAAE,GAAG,MAAM;MAAE;MACzDgB,MAAM,EAAE,MAAM;MAAE;MAChBC,MAAM,EAAE,SAAS,CAAE;IACvB;EAAE,GAXGhB,KAAK;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAaN,CAAC;AAEjB;AAACjB,EAAA,CAhCQL,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAkCf,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}